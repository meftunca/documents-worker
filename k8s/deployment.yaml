apiVersion: v1
kind: ConfigMap
metadata:
  name: documents-worker-config
  namespace: default
data:
  SERVER_PORT: "3001"
  ENVIRONMENT: "production"
  SERVER_READ_TIMEOUT: "30s"
  SERVER_WRITE_TIMEOUT: "30s"
  SERVER_IDLE_TIMEOUT: "120s"
  
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  WORKER_MAX_CONCURRENCY: "10"
  WORKER_QUEUE_NAME: "documents_queue"
  WORKER_RETRY_COUNT: "3"
  WORKER_RETRY_DELAY: "5s"
  
  VIPS_ENABLED: "true"
  FFMPEG_PATH: "ffmpeg"
  LIBREOFFICE_PATH: "soffice"
  MUTOOL_PATH: "mutool"
  TESSERACT_PATH: "tesseract"
  
  OCR_LANGUAGE: "tur+eng"
  OCR_DPI: "300"
  OCR_PSM: "1"
---
apiVersion: v1
kind: Secret
metadata:
  name: documents-worker-secrets
  namespace: default
type: Opaque
data:
  # Redis password in base64 - replace with actual value
  REDIS_PASSWORD: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: documents-worker
  namespace: default
  labels:
    app: documents-worker
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: documents-worker
  template:
    metadata:
      labels:
        app: documents-worker
        version: v1.0.0
    spec:
      containers:
      - name: documents-worker
        image: documents-worker:latest  # Replace with your actual image
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
        envFrom:
        - configMapRef:
            name: documents-worker-config
        - secretRef:
            name: documents-worker-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/liveness
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: documents-worker-service
  namespace: default
  labels:
    app: documents-worker
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: documents-worker
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: documents-worker-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: documents-worker
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: default
    ports:
    - protocol: TCP
      port: 3001
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: default
    ports:
    - protocol: TCP
      port: 6379  # Redis
  - to: []  # Allow external access for dependency downloads
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
